package com.hrms.controller;

import com.hrms.commons.fileUploadToFolder;
import com.hrms.dtos.BaseResponseDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.hrms.dtos.loginDto;
import com.hrms.dtos.visitorDetailsDTO;
import com.hrms.service.InnoInfotechService;
import com.hrms.utitlities.DBUtil;
import com.hrms.utitlities.requestUrlMapping;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

@Controller
public class LoginLogoutController {

	@Autowired
	InnoInfotechService innoInfotechService;

	public LoginLogoutController() {
		System.out.println("Requesting is coming to controller");
	}
	
	//
	
	@RequestMapping(value = requestUrlMapping.adminLogin, method = RequestMethod.POST)
	public String doLoginForAdmin(HttpServletRequest request,loginDto logindto, ModelMap map) {
		String validation=innoInfotechService.getLoginDetails(logindto);
		System.out.println(validation);
		 {
			 if(validation.equalsIgnoreCase("true")) {
				 HttpSession session =request.getSession();
				 session.setMaxInactiveInterval(5*60);
				session.setAttribute("username", logindto.getUid());
                                
                                                                                                                             
					return "RedirectionToHomePage";
			 }
			 else {
				 HttpSession session =request.getSession();
					session.setAttribute("username", null);
					map.addAttribute("message", "please enter correct username");
					return "login";
			 }
		}
		/*else {
			map.addAttribute("message", "please enter correct username");
			return "login";
		}
	}*/
		

}
	
	@RequestMapping(value="logout",method = RequestMethod.POST)
	public void logoutController(HttpServletRequest request, HttpServletResponse response) {
		
		System.out.println(">>>>>>>>>>>>>>>>");
		request.getSession().invalidate();
		//return new ModelAndView( "RedirectionToHomePage");
		try {
			response.sendRedirect("AdminLogin");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		//return null;
		
	}
		
	@RequestMapping(value = "setsession", method = RequestMethod.POST)
	public void doSetSession(HttpServletRequest request,@RequestParam(value="activityId") String activityId) {

				 HttpSession session =request.getSession();
				String loginId = session.getAttribute("username").toString();                                
                                session.setAttribute("access", "1");
                                session.setAttribute("activityId", activityId);
                                session.setAttribute("userrole", "admin");
                                if(!loginId.equalsIgnoreCase("admin")){   
                                //updating session variable on login success
                                    try{
                                        Connection con = DBUtil.getConnection();
                                        Statement stm = con.createStatement();

                                        String sql1 = "select user_role from user_admin where uid='" + loginId +"'";
                                        ResultSet rs1 = stm.executeQuery(sql1);                			
                                        if (rs1.next()) {
                                        session.setAttribute("userrole", rs1.getString("user_role"));
                                        if (session.getAttribute("userrole").toString().equalsIgnoreCase("user")){
                                            session.setAttribute("access", "0");
                                        };
                                        }
                                        con.close();
                        
                                    } catch (SQLException e) {
                                        e.printStackTrace();
                                    }
                                }
//                                    return "Success";
        }

	@RequestMapping(value = "changePassword", method = RequestMethod.POST, produces = "application/json")
	@ResponseBody
	public BaseResponseDTO storeDocDetails(@RequestParam(value = "idno") int idno,@RequestParam(value = "password") String password) {

	       String updatepassword = innoInfotechService.updatePassword(idno,password);
		BaseResponseDTO response=new BaseResponseDTO();
		response.setSuccessMessage(updatepassword);
		return response;

	}
	
}
